class Graph {
    class Edge {
        int src, dest;
    }

    int vertices, edges;
    Edge[] edge;

    Graph(int vertices, int edges) {
        this.vertices = vertices;
        this.edges = edges;

        edge = new Edge[edges];
        for (int i = 0; i < edges; i++) {
            edge[i] = new Edge();
        }
    }

    public static void main(String[] args) {
        int noVertices = 10;
        int noEdges = 18;
        Graph g = new Graph(noVertices, noEdges);

        g.edge[0].src = 1;
        g.edge[0].dest = 2;
        g.edge[1].src = 1;
        g.edge[1].dest = 3;
        g.edge[2].src = 1;
        g.edge[2].dest = 4;
        g.edge[3].src = 2;
        g.edge[3].dest = 4;
        g.edge[4].src = 2;
        g.edge[4].dest = 5;
        g.edge[5].src = 3;
        g.edge[5].dest = 4;
        g.edge[6].src = 3;
        g.edge[6].dest = 5;
        g.edge[7].src = 4;
        g.edge[7].dest = 5;
        g.edge[8].src = 4;
        g.edge[8].dest = 6;
        g.edge[9].src = 4;
        g.edge[9].dest = 7;
        g.edge[10].src = 5;
        g.edge[10].dest = 6;
        g.edge[11].src = 6;
        g.edge[11].dest = 7;
        g.edge[12].src = 6;
        g.edge[12].dest = 8;
        g.edge[13].src = 7;
        g.edge[13].dest = 8;
        g.edge[14].src = 8;
        g.edge[14].dest = 9;
        g.edge[15].src = 9;
        g.edge[15].dest = 7;
        g.edge[16].src = 9;
        g.edge[16].dest = 10;
        g.edge[17].src = 10;
        g.edge[17].dest = 8;

        // Print graph edges
        for (int i = 0; i < noEdges; i++) {
            System.out.println(g.edge[i].src + " - " + g.edge[i].dest);
        }
    }import java.util.Scanner;
import java.util.Stack;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        Stack<Integer> stack = new Stack<>();
        
        while (true) {
            System.out.println("Stack Operations Menu:");
            System.out.println("[1] Push");
            System.out.println("[2] Pop");
            System.out.println("[3] Print");
            System.out.println("[4] Top");
           
            System.out.print("Enter your choice: ");
            
            int choice = scanner.nextInt();
            
            switch (choice) {
                case 1:
                    System.out.print("Enter the element to push: ");
                    int element = scanner.nextInt();
                    stack.push(element);
                    System.out.println(element + " pushed onto the stack.");
                    break;
                
                case 2:
                    if (!stack.isEmpty()) {
                        int poppedElement = stack.pop();
                        System.out.println("Popped element: " + poppedElement);
                    } else {
                        System.out.println("Stack is empty. Cannot pop.");
                    }
                    break;
                
                case 3:
                    if (!stack.isEmpty()) {
                        System.out.print("Stack: ");
                        for (Integer item : stack) {
                            System.out.print(item + " ");
                        }
                        System.out.println();
                    } else {
                        System.out.println("Stack is empty.");
                    }
                    break;
                
                case 4:
                    System.out.println("Top: " + stack.peek());
                    break;
              
            }
        }
    }
}